definitions:
  config.AliyunOSS:
    properties:
      accessKeyId:
        type: string
      accessKeySecret:
        type: string
      basePath:
        type: string
      bucketName:
        type: string
      bucketUrl:
        type: string
      endpoint:
        type: string
    type: object
  config.Autocode:
    properties:
      root:
        type: string
      server:
        type: string
      serverApi:
        type: string
      serverInitialize:
        type: string
      serverModel:
        type: string
      serverRequest:
        type: string
      serverRouter:
        type: string
      serverService:
        type: string
      transferRestart:
        type: boolean
      web:
        type: string
      webApi:
        type: string
      webForm:
        type: string
      webTable:
        type: string
    type: object
  config.Captcha:
    properties:
      imgHeight:
        description: 验证码高度
        type: integer
      imgWidth:
        description: 验证码宽度
        type: integer
      keyLong:
        description: 验证码长度
        type: integer
    type: object
  config.Casbin:
    properties:
      modelPath:
        description: 存放casbin模型的相对路径
        type: string
    type: object
  config.Detail:
    properties:
      compareField:
        description: 需要比较时间的字段
        type: string
      interval:
        description: 时间间隔
        type: string
      tableName:
        description: 需要清理的表名
        type: string
    type: object
  config.Email:
    properties:
      from:
        description: 收件人
        type: string
      host:
        description: 服务器地址
        type: string
      isSSL:
        description: 是否SSL
        type: boolean
      nickname:
        description: 昵称
        type: string
      port:
        description: 端口
        type: integer
      secret:
        description: 密钥
        type: string
      to:
        description: 收件人:多个以英文逗号分隔
        type: string
    type: object
  config.Excel:
    properties:
      dir:
        type: string
    type: object
  config.JWT:
    properties:
      bufferTime:
        description: 缓冲时间
        type: integer
      expiresTime:
        description: 过期时间
        type: integer
      signingKey:
        description: jwt签名
        type: string
    type: object
  config.Local:
    properties:
      path:
        description: 本地文件路径
        type: string
    type: object
  config.Mysql:
    properties:
      config:
        description: 高级配置
        type: string
      dbname:
        description: 数据库名
        type: string
      logMode:
        description: 是否开启Gorm全局日志
        type: string
      logZap:
        description: 是否通过zap写入日志文件
        type: boolean
      maxIdleConns:
        description: 空闲中的最大连接数
        type: integer
      maxOpenConns:
        description: 打开到数据库的最大连接数
        type: integer
      password:
        description: 数据库密码
        type: string
      path:
        description: 服务器地址:端口
        type: string
      username:
        description: 数据库用户名
        type: string
    type: object
  config.Qiniu:
    properties:
      accessKey:
        description: 秘钥AK
        type: string
      bucket:
        description: 空间名称
        type: string
      imgPath:
        description: CDN加速域名
        type: string
      secretKey:
        description: 秘钥SK
        type: string
      useCdnDomains:
        description: 上传是否使用CDN上传加速
        type: boolean
      useHttps:
        description: 是否使用https
        type: boolean
      zone:
        description: 存储区域
        type: string
    type: object
  config.Redis:
    properties:
      addr:
        description: 服务器地址:端口
        type: string
      db:
        description: redis的哪个数据库
        type: integer
      password:
        description: 密码
        type: string
    type: object
  config.Server:
    properties:
      aliyunOSS:
        $ref: '#/definitions/config.AliyunOSS'
      autoCode:
        $ref: '#/definitions/config.Autocode'
        description: auto
      captcha:
        $ref: '#/definitions/config.Captcha'
      casbin:
        $ref: '#/definitions/config.Casbin'
      email:
        $ref: '#/definitions/config.Email'
      excel:
        $ref: '#/definitions/config.Excel'
      jwt:
        $ref: '#/definitions/config.JWT'
      local:
        $ref: '#/definitions/config.Local'
        description: oss
      mysql:
        $ref: '#/definitions/config.Mysql'
        description: gorm
      qiniu:
        $ref: '#/definitions/config.Qiniu'
      redis:
        $ref: '#/definitions/config.Redis'
      system:
        $ref: '#/definitions/config.System'
      tencentCOS:
        $ref: '#/definitions/config.TencentCOS'
      timer:
        $ref: '#/definitions/config.Timer'
      zap:
        $ref: '#/definitions/config.Zap'
    type: object
  config.System:
    properties:
      addr:
        description: 端口值
        type: integer
      dbType:
        description: 数据库类型:mysql(默认)|sqlite|sqlserver|postgresql
        type: string
      env:
        description: 环境值
        type: string
      ossType:
        description: Oss类型
        type: string
      useMultipoint:
        description: 多点登录拦截
        type: boolean
    type: object
  config.TencentCOS:
    properties:
      baseURL:
        type: string
      bucket:
        type: string
      pathPrefix:
        type: string
      region:
        type: string
      secretID:
        type: string
      secretKey:
        type: string
    type: object
  config.Timer:
    properties:
      detail:
        items:
          $ref: '#/definitions/config.Detail'
        type: array
      spec:
        description: CRON表达式
        type: string
      start:
        description: 是否启用
        type: boolean
    type: object
  config.Zap:
    properties:
      director:
        description: 日志文件夹
        type: string
      encodeLevel:
        description: 编码级
        type: string
      format:
        description: 输出
        type: string
      level:
        description: 级别
        type: string
      linkName:
        description: 软链接名称
        type: string
      logInConsole:
        description: 输出控制台
        type: boolean
      prefix:
        description: 日志前缀
        type: string
      showLine:
        description: 显示行
        type: boolean
      stacktraceKey:
        description: 栈名
        type: string
    type: object
  request.AddMenuAuthorityInfo:
    properties:
      authorityId:
        description: 角色ID
        type: string
      menus:
        items:
          $ref: '#/definitions/web.SysBaseMenu'
        type: array
    type: object
  request.ChangePasswordStruct:
    properties:
      newPassword:
        description: 新密码
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.Empty:
    type: object
  request.GetAuthorityId:
    properties:
      authorityId:
        description: 角色ID
        type: string
    type: object
  request.GetById:
    properties:
      id:
        description: 主键ID
        type: number
    type: object
  request.Login:
    properties:
      captcha:
        description: 验证码
        type: string
      captchaId:
        description: 验证码ID
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    type: object
  request.PageInfo:
    properties:
      page:
        description: 页码
        type: integer
      pageSize:
        description: 每页大小
        type: integer
    type: object
  request.Register:
    properties:
      authorityId:
        type: string
      authorityIds:
        items:
          type: string
        type: array
      headerImg:
        type: string
      nickName:
        type: string
      passWord:
        type: string
      userName:
        type: string
    type: object
  request.SetUserAuth:
    properties:
      authorityId:
        description: 角色ID
        type: string
    type: object
  request.SetUserAuthorities:
    properties:
      authorityIds:
        description: 角色ID
        items:
          type: string
        type: array
      id:
        type: integer
    type: object
  web.SysAuthority:
    properties:
      authorityId:
        description: 角色ID
        type: string
      authorityName:
        description: 角色名
        type: string
      children:
        items:
          $ref: '#/definitions/web.SysAuthority'
        type: array
      createdAt:
        description: 创建时间
        type: string
      dataAuthorityId:
        items:
          $ref: '#/definitions/web.SysAuthority'
        type: array
      defaultRouter:
        description: 默认菜单(默认dashboard)
        type: string
      deletedAt:
        type: string
      menus:
        items:
          $ref: '#/definitions/web.SysBaseMenu'
        type: array
      parentId:
        description: 父角色ID
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  web.SysBaseMenu:
    properties:
      authoritys:
        items:
          $ref: '#/definitions/web.SysAuthority'
        type: array
      children:
        items:
          $ref: '#/definitions/web.SysBaseMenu'
        type: array
      closeTab:
        description: 自动关闭tab
        type: boolean
      component:
        description: 对应前端文件路径
        type: string
      createdAt:
        description: 创建时间
        type: string
      defaultMenu:
        description: 是否是基础路由（开发中）
        type: boolean
      hidden:
        description: 是否在列表隐藏
        type: boolean
      icon:
        description: 菜单图标
        type: string
      id:
        description: 主键ID
        type: integer
      keepAlive:
        description: 是否缓存
        type: boolean
      name:
        description: 路由name
        type: string
      parameters:
        items:
          $ref: '#/definitions/web.SysBaseMenuParameter'
        type: array
      parentId:
        description: 父菜单ID
        type: string
      path:
        description: 路由path
        type: string
      sort:
        description: 排序标记
        type: integer
      title:
        description: 菜单名
        type: string
      updatedAt:
        description: 更新时间
        type: string
    type: object
  web.SysBaseMenuParameter:
    properties:
      createdAt:
        description: 创建时间
        type: string
      id:
        description: 主键ID
        type: integer
      key:
        description: 地址栏携带参数的key
        type: string
      sysBaseMenuID:
        type: integer
      type:
        description: 地址栏携带参数为params还是query
        type: string
      updatedAt:
        description: 更新时间
        type: string
      value:
        description: 地址栏携带参数的值
        type: string
    type: object
  web.SysUser:
    properties:
      activeColor:
        description: 活跃颜色
        type: string
      authorities:
        items:
          $ref: '#/definitions/web.SysAuthority'
        type: array
      authority:
        $ref: '#/definitions/web.SysAuthority'
      authorityId:
        description: 用户角色ID
        type: string
      baseColor:
        description: 基础颜色
        type: string
      createdAt:
        description: 创建时间
        type: string
      headerImg:
        description: 用户头像
        type: string
      id:
        description: 主键ID
        type: integer
      nickName:
        description: 用户昵称
        type: string
      sideMode:
        description: 用户侧边主题
        type: string
      updatedAt:
        description: 更新时间
        type: string
      userName:
        description: 用户登录名
        type: string
      uuid:
        description: 用户UUID
        type: string
    type: object
  web.System:
    properties:
      config:
        $ref: '#/definitions/config.Server'
    type: object
info:
  contact: {}
paths:
  /base/captcha:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"验证码获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 生成验证码
      tags:
      - Base
  /base/login:
    post:
      parameters:
      - description: 用户名, 密码, 验证码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Login'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"登陆成功"}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - Base
  /jwt/jsonInBlacklist:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"拉黑成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: jwt加入黑名单
      tags:
      - Jwt
  /menu/addBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/web.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 新增菜单
      tags:
      - Menu
  /menu/addMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.AddMenuAuthorityInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"添加成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 增加menu和角色关联关系
      tags:
      - AuthorityMenu
  /menu/deleteBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除菜单
      tags:
      - Menu
  /menu/getBaseMenuById:
    post:
      consumes:
      - application/json
      parameters:
      - description: 菜单id
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 根据id获取菜单
      tags:
      - Menu
  /menu/getBaseMenuTree:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenu:
    post:
      parameters:
      - description: 空
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Empty'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户动态路由
      tags:
      - AuthorityMenu
  /menu/getMenuAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetAuthorityId'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取指定角色menu
      tags:
      - AuthorityMenu
  /menu/getMenuList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取基础menu列表
      tags:
      - Menu
  /menu/updateBaseMenu:
    post:
      consumes:
      - application/json
      parameters:
      - description: 路由path, 父菜单ID, 路由name, 对应前端文件路径, 排序标记
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/web.SysBaseMenu'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"更新成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更新菜单
      tags:
      - Menu
  /system/getServerInfo:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取服务器信息
      tags:
      - System
  /system/getSystemConfig:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取配置文件内容
      tags:
      - System
  /system/reloadSystem:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: '{"code":0,"data":{},"msg":"重启系统成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 重启系统
      tags:
      - System
  /system/setSystemConfig:
    post:
      parameters:
      - description: 设置配置文件内容
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/web.System'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置配置文件内容
      tags:
      - System
  /user/changePassword:
    post:
      parameters:
      - description: 用户名, 原密码, 新密码
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.ChangePasswordStruct'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 用户修改密码
      tags:
      - SysUser
  /user/deleteUser:
    delete:
      consumes:
      - application/json
      parameters:
      - description: 用户ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.GetById'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"删除成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 删除用户
      tags:
      - SysUser
  /user/getUserInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 获取用户信息
      tags:
      - SysUser
  /user/getUserList:
    post:
      consumes:
      - application/json
      parameters:
      - description: 页码, 每页大小
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.PageInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"获取成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 分页获取用户列表
      tags:
      - SysUser
  /user/register:
    post:
      parameters:
      - description: 用户名, 昵称, 密码, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.Register'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"注册成功"}'
          schema:
            type: string
      summary: 用户注册账号
      tags:
      - SysUser
  /user/setUserAuthorities:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuthorities'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户权限
      tags:
      - SysUser
  /user/setUserAuthority:
    post:
      consumes:
      - application/json
      parameters:
      - description: 用户UUID, 角色ID
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.SetUserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"修改成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 更改用户权限
      tags:
      - SysUser
  /user/setUserInfo:
    put:
      consumes:
      - application/json
      parameters:
      - description: ID, 用户名, 昵称, 头像链接
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/web.SysUser'
      produces:
      - application/json
      responses:
        "200":
          description: '{"success":true,"data":{},"msg":"设置成功"}'
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: 设置用户信息
      tags:
      - SysUser
swagger: "2.0"
